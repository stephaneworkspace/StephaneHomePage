@page "/django"
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject IMatToaster Toaster
@inject IAstrologieServiceHttp AstrologieServiceHttp
@inject IJSRuntime JSRuntime
@using Services.Http
@using System.Net

<AppBar Title="Django Swagger" />
<MatAppBarContent>
    <h3>Django</h3>
    <div id="swagger-ui"></div>
    @*@if (this._swLoaded)
        {
            @GenerateSwagger();
        }*@
</MatAppBarContent>
@code {
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("loadSwagger.loadJson", "http://www.stephane-bressani.ch/api/swagger");
        }
    }
}
@*
    @code {
        private String _data;
        private bool _swLoaded = false;

        protected override async Task OnInitializedAsync()
        {
            await LoadDatas();
        }

        private async Task LoadDatas()
        {
            var response = await AstrologieServiceHttp.GetSwagger();
            switch (response.StatusCode)
            {
                case HttpStatusCode.OK:
                    this._data = await response.Content.ReadAsStringAsync();
                    this._swLoaded = true;
                    break;
                default:
                    Toaster.Add("Impossible de recevoir les données par http", MatToastType.Danger, "Erreur http " + response.StatusCode, "danger");
                    NavigationManager.NavigateTo("/");
                    break;
            }
        }

        private RenderFragment GenerateSwagger()
        {
            return@<div>@this._data</div>;
    }
    }

*@